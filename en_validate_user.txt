@startuml en_validate_user
skinparam defaultFontName Georgia
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
participant validateUser
participant Validator
participant ValidateUserManager
participant ValidateUserWorker
participant UserValiditySetter
participant Mercari_UserJP as ms << (S, #a4edfc) >>

entity TaskChannel << (L, #ADD1B2) >>

database userIDToCardList << (L, #ADD1B2) >>
database cardIDToUserValidity << (L, #ADD1B2) >>
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
activate validateUser

validateUser -> Validator
activate Validator

Validator -> ValidateUserManager: Give the `userIDList` generated in **Step 1**
activate ValidateUserManager
group Task Consumer
    loop#LightBlue `workerCnt` specified by the command arguments
        ValidateUserManager -> ValidateUserWorker
        activate ValidateUserWorker
        ValidateUserWorker -> UserValiditySetter
    
        loop#LightBlue 【**<font color=red>Goroutine</font>**】 the number of tasks(= array of user id) which are fed from `Task Producer`
            activate UserValiditySetter
            TaskChannel --> UserValiditySetter: Get user id from the task channel
            note right of UserValiditySetter: In addition to GetIsAlive, other confirmation processes\nsuch as inquiries to **defpay** will come in the future.
            UserValiditySetter -> ms: **GetIsAlive()**: Contact **mercari-user-jp** with the user id to check the withdrawal status
            UserValiditySetter -> UserValiditySetter: Store the user validity in variable
            UserValiditySetter -> userIDToCardList: Fetch list of card by user id
            loop#SkyBlue the length of card
                UserValiditySetter -> cardIDToUserValidity: Store the user validity tied to the card id to *sync.Map
            end
            deactivate UserValiditySetter
        end
        deactivate ValidateUserWorker
    end
end

group Task Producer
    loop#LightBlue the number of the chunk file paths
        ValidateUserManager -> TaskChannel: Feed user id into the task channel
    end
end

deactivate ValidateUserManager

deactivate Validator

deactivate validateUser

@enduml
